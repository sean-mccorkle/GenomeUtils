#!/usr/bin/perl
# Program:    hydropathy
# Programmer:  Sean R. McCorkle
# Language:    perl
#
# Description:  Reads in one protein (amino acid) sequence and prints out
#               a window-smoothed position-hydropathy index suitable for ploting.
# $Id: hydropathy,v 0.2 2009/11/11 04:52:07 seanmccorkle Exp seanmccorkle $
# 

#  Various hydropathy index tables from various sources.
#  One of these is assigned to %hydro at program start.
#
# K&D - J.Kyte & F. Doolittle, J. Mol. Biol. (1982), 157, 105 - 132
#       
%k_and_d = (
              'A' =>    1.8,
              'C' =>    2.5,
              'D' =>   -3.5,
              'E' =>   -3.5,
              'F' =>    2.8,
              'G' =>   -0.4,
              'H' =>   -3.2,
              'I' =>    4.5,
              'K' =>   -3.9,
              'L' =>    3.8,
              'M' =>    1.9,
              'N' =>   -3.5,
              'P' =>   -1.6,
              'Q' =>   -3.5,
              'R' =>   -4.5,
              'S' =>   -0.8,
              'T' =>   -0.7,
              'V' =>    4.2,
              'W' =>   -0.9,
              'Y' =>   -1.3,
         );

# OHM - R.M. Sweet & D. Eisenberg, J. Mol. Biol. (1983), 171, 479 - 488

%ohm = (
         'A' =>   -0.40,
         'C' =>    0.17,
         'D' =>   -1.31,
         'E' =>   -1.22,
         'F' =>    1.92,
         'G' =>   -0.67,
         'H' =>   -0.64,
         'I' =>    1.25,
         'K' =>   -0.67,
         'L' =>    1.22,
         'M' =>    1.02,
         'N' =>   -0.92,
         'P' =>   -0.49,
         'Q' =>   -0.91,
         'R' =>   -0.59,
         'S' =>   -0.55, 
         'T' =>   -0.28,
         'V' =>    0.91,
         'W' =>    0.50,
         'Y' =>    1.67,
        );

# Consensus - Eisenberg et al, 1983

%consensus = (
               'A' =>    0.62,
               'C' =>    0.29,
               'D' =>   -0.90,
               'E' =>   -0.74,
               'F' =>    1.19,
               'G' =>    0.48,
               'H' =>   -0.40,
               'I' =>    1.38,
               'K' =>   -1.50,
               'L' =>    1.06,
               'M' =>    0.64,
               'N' =>   -0.78,
               'P' =>    0.12,
               'Q' =>   -0.85,
               'R' =>   -2.53,
               'S' =>   -0.18,
               'T' =>   -0.05,
               'V' =>    1.08,
               'W' =>    0.81,
               'Y' =>    0.26,
              );

# Hoop TP and Woods KR: Prediction of protein antigenic determinants from amino acid sequences. Proc Natl Acad Sci USA 78:3824, 1981.
#             Kyte-Doolittle  Hopp-Woods
#
# Alanine             1.8          -0.5
# Arginine           -4.5           3.0
# Asparagine         -3.5           0.2
# Aspartic acid      -3.5           3.0
# Cysteine            2.5          -1.0
# Glutamine          -3.5           0.2
# Glutamic acid      -3.5           3.0
# Glycine            -0.4           0.0
# Histidine          -3.2          -0.5
# Isoleucine          4.5          -1.8
# Leucine             3.8          -1.8
# Lysine             -3.9           3.0
# Methionine          1.9          -1.3
# Phenylalanine       2.8          -2.5
# Proline            -1.6           0.0
# Serine             -0.8           0.3
# Threonine          -0.7          -0.4
# Tryptophan         -0.9          -3.4
# Tyrosine           -1.3          -2.3
# Valine              4.2          -1.5


%hydro = %k_and_d;        # obviously, make these all options-settings
$no_val = -0.490;         # from http://www.expasy.ch/cgi-bin/protscale.pl  Why?
$window = 9;
$mid = 5;

                                  ################
                                  # Main Program #
                                  ################

while ( <> )                # read sequence
   {
    next if ( /^>/ );
    chomp;
    s/ //g;
    $seq .= uc($_);
   }
$len = length($seq);

@raw_h = ();                        # make a raw hydropathy value array
for ( my $i = 0; $i < $len; $i++ )
   { push( @raw_h, hydro( substr( $seq, $i, 1 ) ) ); }

$j = $mid;                           # now smooth & print
foreach $i ( 0..($#raw_h-$window) )
  { printf "%4d %6.3f\n", $j++, convolve( @raw_h[$i..($i+$window-1)] ); }


                               ###############
                               # Subroutines #
                               ###############

# hydro($aa) return value or no_value if not really an amino acid
sub  hydro
   {
    my $aa = shift;
    return ( $hydro{$aa} ? $hydro{$aa} : $no_val );
   }

#
# convolve( @x ) - just a mean (flat box) right now - could be
# fancier in the future
#
sub  convolve
   {
    my $sum = 0.0;
    foreach my $x ( @_ )
       { $sum += $x; }
    return( $sum / $window );
   }
