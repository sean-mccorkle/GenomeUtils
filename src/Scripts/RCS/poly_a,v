head	0.2;
access;
symbols;
locks
	mccorkle:0.2; strict;
comment	@# @;


0.2
date	2003.05.13.20.03.38;	author mccorkle;	state Exp;
branches;
next	0.1;

0.1
date	2001.04.09.17.34.25;	author mccorkle;	state Exp;
branches;
next	;


desc
@Utility for finding and doing stats on poly A tracks (and poly C, G, T)
@


0.2
log
@added -l option
@
text
@#!/usr/bin/perl
# Program:      poly_a
# Programmer:   Sean R. McCorkle
# Language:     perl
#
# Description:  Search for and report large strings of "aaa..." in
#               DNA sequences. 
#
# Usage:        poly_a [-rt]  <seqfile> [<seqfile> ...]
#             
#               where each <seqfile> is a collection of DNA sequences in FASTA
#               format.  If no input is specified, stdin is scanned.
#
# Options:
#                -b <b>  report streches of base <b> instead of 'a'
#                -l      append position from left end (after last hit)
#                -m <n>  report all stretches >= n (default 4)
#                -r      append remaining length (after last hit)
#                -t      terse mode (no hdrs)
#
# Needs more options for output: 
#   turn on/off multiples
#   include poly_a tail
#
# $Id: poly_a,v 0.1 2001/04/09 17:34:25 mccorkle Exp mccorkle $
#
use Getopt::Std;


getopts( "b:lm:rt" ) || exit( 1 );

$char = $opt_b ? lc( $opt_b ) : 'a';
$min_thresh = $opt_m ? $opt_m : 4;

while ( <> )
   {
    chomp;
    if ( s/^>// )
       {
        $new_hdr = $_;
        process() if ( $hdr );
        $seq = "";
        $hdr = $new_hdr;
       }
    else
       {
        s/\s//g;          # remove whitespace
        s/^\d*//;         # any option beginning line numbers
        $seq .= lc( $_ );
       }
   }

process() if $hdr;

sub process
   {
    my ( $as, $rlen, $llen ) = ( "", 0, 0 );
    my $pat = $char . "{$min_thresh,}";
    while ( $seq =~ /($pat)/ )
       { 
        if ( length( $1 ) > length( $as ) && $' )
           { 
            $llen += length( $` ) + length( $1 );
            $as = $1;
            $rlen = length( $' );
           }
        $seq = $';
       }
    if ( $as )
       {
        $llen -= length( $as );
        print "$hdr: " unless ( $opt_t );
        printf " %4d", length( $as );
        printf " %4d", $llen if ( $opt_l ); 
        printf " %4d", $rlen if ( $opt_r ); 
        print "\n";
       }
   }




@


0.1
log
@looking pretty useful, so I'm installing everywhere right now.
@
text
@d16 1
d25 1
a25 1
# $Id$
d30 1
a30 1
getopts( "b:m:rt" ) || exit( 1 );
d57 1
a57 1
    my ( $as, $rlen ) = ( "", 0 );
d63 1
d71 1
d74 1
@
