#!/usr/bin/perl
#
#
#  -p<pat>[,<pat>,...]
#  -c<col>[,<col>,...]
#  -A  show all sequences (default - only show sequences with hits)
# heda
#  -f<char>  field seperator in headers for id (default is ' ' (space)
#  -i<n>     
#
use Getopt::Std;

die "bad option\n" unless( getopts( 'Ap:' ) );

%pats = ( 
           'CATG' => 1,
           'GGATCC' => 2,
           'TTAA' => 3,
           'CATAA' => 4,
           'TTATG' => 5,
         );

%color = (  0 => 'black',
            1 => 'red',
            2 => 'purple',
            3 => 'blue',
            4 => 'green',
            5 => 'orange',
         );


$linelen = 50;

if ( $opt_p )
   {
    %pats = ();
    $i = 1;
    foreach $p ( split( /\s*,\s*/, $opt_p ) )
       {
        $pats{$p} = $i++;
       }
    }

print "<BODY BGCOLOR=white><TT>\n";
while ( <> )
   {
    chomp;
    if ( /^>(.*)/ )
       {
        $new_hdr = $1;
        process( $hdr, $seq ) if ( defined( $hdr ) );
        $hdr = $new_hdr;
        $seq = "";
       }
    else
       {
        s/\s//g;
        $seq .= $_;
       }
   }

process( $hdr, $seq ) if ( defined( $hdr ) );

print "</TT>\n";

sub process
   {
    my ( $hdr, $seq ) = @_;

    my @col = (0) x length( $seq );
    my $nhits = 0; 

    $_ = $seq;
    foreach $re ( sort by_length keys( %pats ) )
       {
        #print "$re ", length( $re ), "\n";
        while ( m/$re/ig )
           {
            ($p,$l) = ( length( $` ), length( $& ) );
            #print "   [$`] [$&] [$']\n";
            #print "   $p $l\n";
            for ( my $i = $p; $i < $p + $l; $i++ )
                { $col[$i] = $pats{$re}; }
            $nhits++;
           }
       }
    output( $hdr, $seq, @col ) if ( $nhits || $opt_A );
   }

sub  output
   {
    my ( $hdr, $seq, @col ) = @_;
    my $i;
    print ">$hdr<BR>\n";
    my $curr = 0;
    for ( $i = 0; $i < length( $seq ); $i++ )
       {
        if ( $col[$i] != $curr )
           {
            print "</FONT>" if ( $curr != 0 );
            print "<FONT color=", $color{$col[$i]},">" if ( $col[$i] != 0 )
           }
        printf substr( $seq, $i, 1 );
        print "<BR>\n" if ( (($i+1) % $linelen) == 0 );
        $curr = $col[$i];
       }
    print( "</FONT>" ) if ( $curr != 0 );
    print "<BR>\n" unless ( ($i % $linelen) == 0 );
   }

sub  by_length
   { return( length( $a ) <=> length( $b ) ); }
